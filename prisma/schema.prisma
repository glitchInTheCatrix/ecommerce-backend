datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
//   directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// schema.prisma

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  orders     Order[]
  cartItems  Cart[]
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  categoryId  Int
  category    Category  @relation(fields: [categoryId], references: [id])
  cartItems   Cart[]
  orderItems  OrderItem[]
}

model Category {
  id         Int       @id @default(autoincrement())
  name       String
  products   Product[]
}

model Order {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  
  status      OrderStatus @default(PENDING)
  orderItems  OrderItem[]
}

model OrderItem {
  id         Int      @id @default(autoincrement())
  quantity   Int
  price      Float
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])
  orderId    Int
  order      Order    @relation(fields: [orderId], references: [id])
}

model Cart {
  id         Int      @id @default(autoincrement())
  quantity   Int
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}
